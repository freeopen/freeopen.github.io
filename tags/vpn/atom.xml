<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title>Freeopen - vpn</title>
    <subtitle>7 labo.</subtitle>
    <link rel="self" type="application/atom+xml" href="/tags/vpn/atom.xml"/>
    <link rel="alternate" type="text/html" href="/"/>
    <generator uri="https://www.getzola.org/">Zola</generator>
    <updated>2023-09-04T00:00:00+00:00</updated>
    <id>/tags/vpn/atom.xml</id>
    <entry xml:lang="en">
        <title>一支红杏出墙来</title>
        <published>2021-04-04T00:00:00+00:00</published>
        <updated>2023-09-04T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="/blog/centos-vpn/"/>
        <id>/blog/centos-vpn/</id>
        
        <content type="html" xml:base="/blog/centos-vpn/">&lt;ul&gt;
&lt;li&gt;1CPU,512M&lt;&#x2F;li&gt;
&lt;li&gt;CentOS 8.2 aliyun&lt;&#x2F;li&gt;
&lt;li&gt;StrongSwan 5.8.2&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;yi-zhun-bei-jie-duan&quot;&gt;一、准备阶段&lt;&#x2F;h2&gt;
&lt;p&gt;新建服务器时，不选择 &lt;code&gt;安全加固&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;首先卸载阿里云安骑士&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;wget http:&amp;#x2F;&amp;#x2F;update.aegis.aliyun.com&amp;#x2F;download&amp;#x2F;uninstall.sh
source .&amp;#x2F;uninstall.sh
wget http:&amp;#x2F;&amp;#x2F;update.aegis.aliyun.com&amp;#x2F;download&amp;#x2F;quartz_uninstall.sh
source .&amp;#x2F;quartz_uninstall.sh
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;删除安骑士残留文件&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;pkill aliyun-service
rm -fr &amp;#x2F;etc&amp;#x2F;init.d&amp;#x2F;agentwatch &amp;#x2F;usr&amp;#x2F;sbin&amp;#x2F;aliyun-service
rm -rf &amp;#x2F;usr&amp;#x2F;local&amp;#x2F;aegis*
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;以 root 用户登录, 安装 epel 源，阿里云centos 8 的镜像比较新，不需要 update, 费流量。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;dnf install epel-release&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;安装必备软件&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;dnf install nginx certbot iptables-services crontab strongswan
#nginx开机启动
systemctl enable nginx
#启动nginx
systemctl restart nginx
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;er-shen-qing-ssl-zheng-shu&quot;&gt;二、申请 ssl 证书&lt;&#x2F;h2&gt;
&lt;p&gt;StrongSwan IPsec IKEv2 连接需要用到服务器证书，用于验证服务器身份。由于自签发证书不受操作系统信任，我们需要申请 &lt;a href=&quot;https:&#x2F;&#x2F;letsencrypt.org&#x2F;&quot;&gt;Let’s Encrypt&lt;&#x2F;a&gt; 免费证书。
申请证书需要有域名，提前将域名解析到你的vps地址。&lt;&#x2F;p&gt;
&lt;p&gt;方式一，webroot 模式， 必须打开nginx, 能访问80端口&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;#在web根目录创建临时目录
mkdir -p &amp;#x2F;usr&amp;#x2F;share&amp;#x2F;nginx&amp;#x2F;html&amp;#x2F;.well-known&amp;#x2F;acme-challenge

#--webroot 参数:指定使用临时目录的方式. -w 参数:指定后面 -d 域名所在的根目录, 如果一次申请多个域的, 可以附加更多 -w...-d... 这段.
certbot certonly --webroot --email xxx@xxx.com -w &amp;#x2F;usr&amp;#x2F;share&amp;#x2F;nginx&amp;#x2F;html -d xx.xxx.com
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;方式二，standalone 模式，不需要打开nginx，但必须能访问80端口&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;certbot certonly --rsa-key-size 2048 --standalone --agree-tos --no-eff-email --email xxx@gmail.com -d xxx.xxx.com
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;certbot-zheng-shu-zi-dong-geng-xin&quot;&gt;Certbot 证书自动更新&lt;&#x2F;h3&gt;
&lt;p&gt;由于 &lt;a href=&quot;https:&#x2F;&#x2F;letsencrypt.org&#x2F;&quot;&gt;Let’s Encrypt&lt;&#x2F;a&gt; 证书只有90天有效期，为避免过期，需要启用自动续期。自动续期由定时任务完成。&lt;&#x2F;p&gt;
&lt;p&gt;对于网站的 SSL 证书， 自动续期也同样重要。&lt;&#x2F;p&gt;
&lt;h4 id=&quot;fang-an-yi&quot;&gt;方案一&lt;&#x2F;h4&gt;
&lt;p&gt;编辑定时任务配置, 写入下面红色内容，这段的意思是每月28号凌晨3点运行 certbot renew 命令给证书续期，如果续期成功则重启 nginx 和 strongswan 服务。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;vim  &#x2F;etc&#x2F;crontab&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;SHELL=&amp;#x2F;bin&amp;#x2F;bash
PATH=&amp;#x2F;sbin:&amp;#x2F;bin:&amp;#x2F;usr&amp;#x2F;sbin:&amp;#x2F;usr&amp;#x2F;bin
MAILTO=root

# For details see man 4 crontabs

# Example of job definition:
# .---------------- minute (0 - 59)
# |  .------------- hour (0 - 23)
# |  |  .---------- day of month (1 - 31)
# |  |  |  .------- month (1 - 12) OR jan,feb,mar,apr ...
# |  |  |  |  .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat
# |  |  |  |  |
# *  *  *  *  * user-name  command to be executed
0 3 28 * * root certbot renew --quiet --deploy-hook &amp;quot;systemctl restart nginx &amp;amp;&amp;amp; systemctl restart strongswan&amp;quot;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;加载定时任务配置，使之生效。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;crontab &#x2F;etc&#x2F;crontab&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;h4 id=&quot;fang-an-er&quot;&gt;方案二&lt;&#x2F;h4&gt;
&lt;p&gt;每天测试一下，证书是否在未来30天过期，如果过期就更新，否则什么也不做。&lt;&#x2F;p&gt;
&lt;pre&gt;&lt;code&gt;$ cat &amp;#x2F;etc&amp;#x2F;cron.d&amp;#x2F;certbot

# &amp;#x2F;etc&amp;#x2F;cron.d&amp;#x2F;certbot: crontab entries for the certbot package
#
# Upstream recommends attempting renewal twice a day
#
# Eventually, this will be an opportunity to validate certificates
# haven&amp;#x27;t been revoked, etc.  Renewal will only occur if expiration
# is within 30 days.
SHELL=&amp;#x2F;bin&amp;#x2F;sh
PATH=&amp;#x2F;usr&amp;#x2F;local&amp;#x2F;sbin:&amp;#x2F;usr&amp;#x2F;local&amp;#x2F;bin:&amp;#x2F;sbin:&amp;#x2F;bin:&amp;#x2F;usr&amp;#x2F;sbin:&amp;#x2F;usr&amp;#x2F;bin

0 *&amp;#x2F;12 * * * root test -x &amp;#x2F;usr&amp;#x2F;bin&amp;#x2F;certbot  -a \! -d &amp;#x2F;run&amp;#x2F;systemd&amp;#x2F;system &amp;amp;&amp;amp;  perl -e &amp;#x27;sleep int(rand(43200))&amp;#x27; &amp;amp;&amp;amp;  certbot -q renew
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h4 id=&quot;fang-an-san&quot;&gt;方案三&lt;&#x2F;h4&gt;
&lt;p&gt;我最喜欢的方式，采用 centos 模式的 service 进行管理。&lt;&#x2F;p&gt;
&lt;p&gt;安装了certbot nginx 插件(须安装&lt;code&gt;python3-certbot-nginx&lt;&#x2F;code&gt;)后，执行一次证书更新后，发现输出的提示语中有句，certbot证书已能自动更新，仔细查看配置，发现生成了一个证书更新服务，名字叫certbot-renew, 由两个文件组成，certbot-renew.service 和 certbot-renew.timer。基本逻辑是每12小时，检查一下证书更新, 注意证书更新后，须重启一次 strongswan 服务。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;systemctl enable --now certbot-renew.timer&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;编辑 &#x2F;etc&#x2F;letsencrypt&#x2F;renewal&#x2F;example.com.conf 文件，一个域名配置一个文件.&lt;&#x2F;p&gt;
&lt;pre&gt;&lt;code&gt;renew_hook = systemctl restart strongswan
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;或者在 &#x2F;etc&#x2F;letsencrypt&#x2F;renewal-hooks&#x2F; 不同目录下配置独立的运行脚本，来运行证书更新后的相关服务。&lt;&#x2F;p&gt;
&lt;p&gt;相关 hook 解释如下， renew_hook 在最新的官方文档中没看到解释，不保证一定可用.&lt;&#x2F;p&gt;
&lt;pre&gt;&lt;code&gt;--pre-hook : renew 之前执行
--post-hook : renew 之后执行
--deploy-hook : renew 成功之后执行
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;san-an-zhuang-strongswan&quot;&gt;三、安装 strongswan&lt;&#x2F;h2&gt;
&lt;p&gt;注意， 本配置适用于5.8.2以上，基于 swanctl 配置。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;vim &#x2F;etc&#x2F;strongswan&#x2F;swanctl&#x2F;conf.d&#x2F;xx.xxx.com.conf&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre&gt;&lt;code&gt;connections {
    ikev2-eap-mschapv2 {
        version = 2
        unique = never
        rekey_time = 0s
        fragmentation = yes
        dpd_delay = 60s
        send_cert = always
        pools = ipv4-addrs, ipv6-addrs
        proposals = aes256-sha256-prfsha256-modp2048, aes256gcm16-prfsha384-modp1024, default
        local_addrs = %any
        local {
            certs = cert.pem
            id = xx.xxx.com
        }
        remote {
            auth = eap-mschapv2
            eap_id = %any
        }
        children {
            ikev2-eap-mschapv2 {
                local_ts = 0.0.0.0&amp;#x2F;0,::&amp;#x2F;0
                rekey_time = 0s
                dpd_action = clear
                esp_proposals = aes256-sha256, aes128-sha1, default
            }
        }
    }
}
pools {
    ipv4-addrs {
        addrs = 10.10.0.0&amp;#x2F;24
        dns = 8.8.8.8,8.8.4.4,114.114.114.114
    }
    ipv6-addrs {
        addrs = fec1::0&amp;#x2F;24
        dns = 2001:4860:4860::8888,2606:4700:4700::1111
    }
}
secrets {
    private-xxx {
        file = privkey.pem
    }
    eap-user1 {
        id = user1
        secret = &amp;quot;123456&amp;quot;
    }
    eap-user2 {
        id = user2
        secret = &amp;quot;654321&amp;quot;
    }
}
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;高亮部分中的 xx.xxx.com 替换为上面申请证书时用的域名， private-xxx 中的 xxx 随意，不要有符号，eap-user1 和 id = user1 中的 user1 替换为你想登录vpn使用的账号，secret = “123456” 改为你的密码。
如需添加多个用户，复制 eap-user1 { … } 段粘贴到下面，按上面规则设置新的用户名和密码即可。&lt;&#x2F;p&gt;
&lt;p&gt;安装证书，创建证书软链接到 strongswan 的对应目录。&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;ln -s &amp;#x2F;etc&amp;#x2F;letsencrypt&amp;#x2F;live&amp;#x2F;xx.xxx.com&amp;#x2F;cert.pem &amp;#x2F;etc&amp;#x2F;strongswan&amp;#x2F;swanctl&amp;#x2F;x509&amp;#x2F;cert.pem
ln -s &amp;#x2F;etc&amp;#x2F;letsencrypt&amp;#x2F;live&amp;#x2F;xx.xxx.com&amp;#x2F;privkey.pem &amp;#x2F;etc&amp;#x2F;strongswan&amp;#x2F;swanctl&amp;#x2F;private&amp;#x2F;privkey.pem
ln -s &amp;#x2F;etc&amp;#x2F;letsencrypt&amp;#x2F;live&amp;#x2F;xx.xxx.com&amp;#x2F;chain.pem &amp;#x2F;etc&amp;#x2F;strongswan&amp;#x2F;swanctl&amp;#x2F;x509ca&amp;#x2F;ca.pem
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;证书安装完成
重启服务&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;systemctl restart strongswan&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;开启内核转发&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;vim &#x2F;etc&#x2F;sysctl.conf&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;用下面内容替换配置文件中同名的项，如果没有则新增。&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;#开启内核ipv4转发
net.ipv4.ip_forward = 1
net.ipv4.conf.all.accept_redirects = 0
net.ipv4.conf.all.send_redirects = 0

#开启内核ipv6转发
net.ipv6.conf.all.forwarding = 1
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;重新加载配置&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;sysctl -p&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;配置防火墙&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;vim &#x2F;etc&#x2F;sysconfig&#x2F;iptables&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;在合适的位置添加以下规则, 注意顺序, 新增 屏蔽 安骑士 ip 脚本。&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;# sample configuration for iptables service
# you can edit this manually or use system-config-firewall
# please do not ask us to add additional ports&amp;#x2F;services to this default configuration
*nat
:PREROUTING ACCEPT [0:0]
:INPUT ACCEPT [0:0]
:POSTROUTING ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
-A POSTROUTING -s 10.10.0.0&amp;#x2F;24 -o eth0 -m policy --dir out --pol ipsec -j ACCEPT
-A POSTROUTING -s 10.10.0.0&amp;#x2F;24 -o eth0 -j MASQUERADE
COMMIT
*filter
:INPUT ACCEPT [0:0]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
-A INPUT -p icmp -j ACCEPT
-A INPUT -i lo -j ACCEPT
-A INPUT -s 140.205.201.0&amp;#x2F;24 -j DROP
-A INPUT -s 140.205.255.0&amp;#x2F;24 -j DROP
-A INPUT -p tcp -m state --state NEW -m tcp --dport 22 -j ACCEPT
-A INPUT -p tcp -m tcp --dport 80 -j ACCEPT
-A INPUT -p tcp -m tcp --dport 443 -j ACCEPT
-A INPUT -i eth0 -p ah -j ACCEPT
-A INPUT -i eth0 -p esp -j ACCEPT
-A INPUT -i eth0 -p udp -m udp --dport 500 -j ACCEPT
-A INPUT -i eth0 -p udp -m udp --dport 4500 -j ACCEPT
-A INPUT -j REJECT --reject-with icmp-host-prohibited
-A FORWARD -i eth0 -m policy --dir in --pol ipsec -j ACCEPT
-A FORWARD -d 10.10.0.0&amp;#x2F;24 -o eth0 -m policy --dir out --pol ipsec -j ACCEPT
-A FORWARD -j REJECT --reject-with icmp-host-prohibited
COMMIT
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;重启防火墙，使规则生效。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;systemctl restart iptables&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;配置strongswan 输出日志，方便测试，测试完成后，关闭该日志&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;vim &#x2F;etc&#x2F;strongswan&#x2F;strongswan.d&#x2F;charon.conf&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;charon {
    filelog {
        charon-debug-log {
            path = &amp;#x2F;var&amp;#x2F;log&amp;#x2F;charon_debug.log
            time_format = %b %e %T
            default = 2
            mgr = 0
            net = 1
            enc = 1
            asn = 1
            job = 1
            ike_name = yes
            append = no
            flush_line = yes
        }
    }
    #这里是其它设置......
}
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;启动strongswan&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;systemctl start strongswan&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;si-zui-hou-zhuang-tai-jian-cha-ji-ce-shi&quot;&gt;四、最后状态检查 及 测试&lt;&#x2F;h2&gt;
&lt;pre&gt;&lt;code&gt;systemctl status nginx
systemctl status iptables
systemctl status strongswan
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;到阿里云控制台打开白名单，包含：&lt;&#x2F;p&gt;
&lt;pre&gt;&lt;code&gt;tcp 500
tcp 4500
全部 GRE
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;windows  macos ios 直接配置 vpn即可，&lt;&#x2F;p&gt;
&lt;p&gt;Android 系统需要下载客户端程序，前往官网下载 &lt;a href=&quot;https:&#x2F;&#x2F;download.strongswan.org&#x2F;Android&#x2F;?C=M;O=D&quot;&gt;最新版 apk 程序&lt;&#x2F;a&gt;。
测试完成后，记得关闭 strongswan 日志, 重启 strongswan。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;systemctl restart strongswan&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;设置开机自启动，完工。&lt;&#x2F;p&gt;
&lt;pre&gt;&lt;code&gt;systemctl enable iptables
systemctl enable strongswan
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;wu-wei-hu&quot;&gt;五、维护&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;strong&gt;证书更新配置测试&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;certbot renew  --dry-run&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;查看证书情况&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;certbot certificates&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;证书手动更新&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;certbot --nginx certonly -n -d domain&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;第三种更新方法须安装 &lt;code&gt;python3-certbot-nginx&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;移除不需要的域名证书&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;pre&gt;&lt;code&gt;# 先备份
cp &amp;#x2F;etc&amp;#x2F;letsencrypt&amp;#x2F; &amp;#x2F;etc&amp;#x2F;letsencrypt.backup -r
# 再移除，撤销证书并自动删除相关文件
certbot revoke --cert-path &amp;#x2F;etc&amp;#x2F;letsencrypt&amp;#x2F;archive&amp;#x2F;www.xxxx.com&amp;#x2F;cert1.pem
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;liu-huo-qu-tong-pei-fu-zheng-shu&quot;&gt;六、获取通配符证书&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;获取Cloudflare API Token&lt;&#x2F;p&gt;
&lt;p&gt;My Profile &amp;gt; API Token &amp;gt; Edit zone DNS&lt;&#x2F;p&gt;
&lt;p&gt;Zone Resource 区域 指定配置的域名&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;编辑配置文件&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre&gt;&lt;code&gt;touch &amp;#x2F;etc&amp;#x2F;letsencrypt&amp;#x2F;cloudflare.ini
# Cloudflare API token used by Certbot
dns_cloudflare_api_token = _yourToken_
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;CentOS 安装 certbot-dns-cloudflare 插件&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre&gt;&lt;code&gt;yum install python3-certbot-dns-cloudflare
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;获取证书&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre&gt;&lt;code&gt;certbot certonly  --dns-cloudflare  --dns-cloudflare-credentials &amp;#x2F;etc&amp;#x2F;letsencrypt&amp;#x2F;cloudflare.ini  --key-type ecdsa --domain &amp;quot;*.freeopen.tech&amp;quot;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
</content>
        
    </entry>
</feed>
